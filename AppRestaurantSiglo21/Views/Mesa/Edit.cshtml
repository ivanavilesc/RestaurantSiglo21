@model AppRestaurantSiglo21.Models.MESA
<!--//AQUI ARRIBA SE LE INDICA A LA VISTA QUE USE DEL MODELO LA TABLA MESA SI RECIBE DATOS-->

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Principal.cshtml";
}

<h2>Editar mesa</h2>
@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h4>Editar Mesa</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" }) <!-- ES SOLO UN VALIDADOR DE TEXTO -->
        <!-- ENVÍO COMO ATRIBUTO OCULTO EL VALOR CORRESPONDIENTE A LAS PK Y FK -->
        @Html.HiddenFor(model => model.IDMESA)
        @Html.HiddenFor(model => model.IDLOCAL)
        @Html.HiddenFor(model => model.IDESTADOMESA)

        <div class="form-group">

            <!-- EN ESTE FORM-GROUP ESTÁ EL LABEL, TEXTBOX Y MENSAJE DE VALIDACIÓN DEL CAMPO DESCMESA -->
            @Html.LabelFor(model => model.DESCMESA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DESCMESA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DESCMESA, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <!-- EN ESTE FORM-GROUP ESTÁ EL LABEL, TEXTBOX Y MENSAJE DE VALIDACIÓN DEL CAMPO CAPACIDAD -->
            @Html.LabelFor(model => model.CAPACIDAD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CAPACIDAD, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CAPACIDAD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.IDESTADOMESA, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <p>Seleccione el estado de la mesa</p>
            <form action="/Edit.cshtml">
                <label for="Estado">Elija un estado:</label>
                <select id=model.IDESTADOMESA name="IDESTADOMESA">
                    <option value="0">Vacía</option>
                    <option value="1">Ocupada</option>
                    @Html.ValidationMessageFor(model => model.IDESTADOMESA, "", new { @class = "text-danger" })

                </select>



                @*@Html.EditorFor(model => model.IDESTADOMESA, new { htmlAttributes = new { @id = "IDESTADOMESA", @class = "form-control" } })*@
                @Html.ValueFor(model => model.IDESTADOMESA)
                @*@Html.EditorFor(model => model.IDESTADOMESA, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.IDESTADOMESA, "", new { @class = "text-danger" })*@

                @*@Html.DropDownListFor(model => model.IDESTADOMESA, (List<SelectListItem>)ViewBag.MESA, "selecciona la mesa", new { @id = "iddropdownlist", @class = "form-control" })
                    @Html.EditorFor(model => model.IDESTADOMESA, new { htmlAttributes = new { @id = "IDESTADOMESA", @class = "form-control" } })*@

            </form>



        </div>



        <div class="form-group">
            <!-- UN FORM-GROUP PARA PONER EL BOTON SUBMIT -->
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar cambios" class="btn btn-default" />
            </div>
        </div>

    </div>
} <!--AQUI TERMINA EL FORM QUE ENVÍA POR METODO POST-->

<div>
    @Html.ActionLink("Volver a la Lista", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
