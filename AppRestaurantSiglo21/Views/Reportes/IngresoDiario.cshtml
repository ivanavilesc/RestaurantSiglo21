
@{
    ViewBag.Title = "IngresoDiario";
    Layout = Session["Layout"].ToString();
}
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>

<link href="~/Content/css/dashboard.css" rel="stylesheet" />

<div class="container-fluid">
    <div class="card text-center">
        <div class="card-body">
            <h3>INFORMES DE GESTIÓN</h3>
        </div>
    </div>@*Fin de CARD*@
    <br />

    <div class="row">
        @*Muestra sidebar y graficos en una fila*@
        <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
            <div class="sidebar-sticky pt-3">
                <ul class="nav nav-pills flex-column">
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            <span data-feather="home"></span>
                            <strong>Dashboard</strong> <span class="sr-only">(current)</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Reportes/IngresoDiario">
                            <span data-feather="file"></span>
                            Ventas
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Reportes">
                            <span data-feather="shopping-cart"></span>
                            Atenciones
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Reportes/TopProductos">
                            <span data-feather="users"></span>
                            Top Productos
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            <span data-feather="layers"></span>
                            Estadisticas
                        </a>
                    </li>
                </ul>
            </div>
        </nav>

        <div id="chartdiv" class="col-md-6 col-lg-5 d-md-block" style="width: 500px; height: 350px; " collapse>

        </div>

        &nbsp;

        <div id="chartdiv2" class="col-md-3 col-lg-auto d-md-block" style="width: 500px; height: 350px; " collapse>

        </div>

    </div>


</div>
<script type="text/javascript">
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.load('current', { 'packages': ['table'] });

    //Call function after Google Chart is loaded, it is required, otherwise you may get error
    google.charts.setOnLoadCallback(DrawonLoad);

    google.charts.setOnLoadCallback(drawTable);

    function DrawonLoad() {
        $(function () {
            $.ajax({
                type: 'GET',
                url: '/Reportes/GetIngresoDiarioJSON',
                success: function (chartsdata) {
                    // Callback that creates and populates a data table,
                    // instantiates the pie chart, passes in the data and
                    // draws it.

                    //get JSONList from Object
                    var Data = chartsdata.JSONList;
                    var data = new google.visualization.DataTable();
                    //Aqui se agregan las columnas que se usarán para construir la vista del grafico
                    data.addColumn('string', 'FechaIngreso');
                    data.addColumn('number', 'TotalIngreso');
                    
                    //Esta funcion sobrecarga la clase String agregando un metodo toDateCustom que formatea la fecha de salida
                    String.prototype.toDateCustom = function () {
                        var date = this;
                        if (!date)
                            return "";
                        var f = new Date(parseInt(date.replace("/Date(", "").replace(")/", ""), 10)),
                            dia = f.getDate(), mes = (parseInt(f.getMonth()) + 1), anio = f.getFullYear();
                        return ((dia < 10 ? "0" + dia : dia) + "/" + (mes < 10 ? "0" + mes : mes) + "/" + anio);
                    }

                    //Loop through each list data
                    for (var i = 0; i < Data.length; i++) {

                        //Aqui se agregan las filas al DataSet, en el caso de la Fecha se formatea con el metodo sobrecargado toDateCustom()
                        data.addRow(
                            [
                                Data[i].FechaIngreso.toDateCustom(),
                                Data[i].TotalIngreso                                
                            ]
                        );
                    }

                    // Instantiate and draw our chart, passing in some options

                    var chart = new google.visualization.ColumnChart(document.getElementById('chartdiv'));
                    //Draw pie chart command with data and chart options
                    chart.draw(data,
                        {
                            title: "Reporte - Ventas $ por día",
                            position: "top",
                            fontsize: "16px",
                        });

                },
                error: function () {
                    alert("Error loading data! Please try again.");
                }
            });
        })

    }

    function drawTable() {
        //#####################

        $(function () {
            $.ajax({
                type: 'GET',
                url: '/Reportes/GetIngresoDiarioJSON',
                success: function (chartsdata) {
                    // Callback that creates and populates a data table,
                    // instantiates the pie chart, passes in the data and
                    // draws it.

                    //get JSONList from Object
                    var Data = chartsdata.JSONList;
                    var data = new google.visualization.DataTable();
                    //Aqui se agregan las columnas que se usarán para construir la vista del grafico
                    data.addColumn('number', 'TotalIngreso');
                    data.addColumn('string', 'FechaIngreso');
                    data.addColumn('string', 'MedioPago');

                    //Esta funcion sobrecarga la clase String agregando un metodo toDateCustom que formatea la fecha de salida
                    String.prototype.toDateCustom = function () {
                        var date = this;
                        if (!date)
                            return "";
                        var f = new Date(parseInt(date.replace("/Date(", "").replace(")/", ""), 10)),
                            dia = f.getDate(), mes = (parseInt(f.getMonth()) + 1), anio = f.getFullYear();
                        return ((dia < 10 ? "0" + dia : dia) + "/" + (mes < 10 ? "0" + mes : mes) + "/" + anio);
                    }

                    //Loop through each list data
                    var mediopago;
                    for (var i = 0; i < Data.length; i++) {
                        
                        //Aqui se agregan las filas al DataSet, en el caso de la Fecha se formatea con el metodo sobrecargado toDateCustom()
                        if (Data[i].MedioPago === 1) {
                            mediopago = "Efectivo"
                        } else {
                            mediopago = "Tarjeta"
                        };
                        data.addRow(
                            [
                                Data[i].TotalIngreso,
                                Data[i].FechaIngreso.toDateCustom(),
                                Data[i].MedioPago = mediopago
                            ]
                        );
                    }

                    // Instantiate and draw our chart, passing in some options

                    var chart2 = new google.visualization.Table(document.getElementById('chartdiv2'));

                    //Draw pie chart command with data and chart options
                    chart2.draw(data,
                        {
                            title: "Tabla - Cantidad de Ventas por día",
                            position: "top",
                            fontsize: "16px",
                        });
                    chart2.draw(data, { showRowNumber: true, width: '100%', height: '100%' });


                },
                error: function () {
                    alert("Error loading data! Please try again.");
                }
            });
        })



    }

</script>